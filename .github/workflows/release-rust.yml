name: Release Rust Crates

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [ master, develop, ]
    # branches: [ master, develop ]
    # paths:
    #   - 'source/ports/rs_port/Cargo.toml'
    #   - 'source/ports/rs_port/inline/Cargo.toml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

jobs:
  test:
    name: Rust Port Tests
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
          os: [macos-latest, ubuntu-latest]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Export XCode SDK Root
        if: matrix.os == 'macos-latest'
        run: echo "SDKROOT=$(xcrun --sdk macosx --show-sdk-path)" >> $GITHUB_ENV
      - name: install metacall (${{ matrix.os }})
        if: matrix.os != 'windows-latest'
        run: curl -sL https://raw.githubusercontent.com/metacall/install/master/install.sh | sh
      - name: Install Rust
        uses: actions-rs/toolchain@v1 
        with:
          toolchain: stable
          override: true
      - name: Set up Rust
        uses: actions-rs/toolchain@v1 
        with:
          toolchain: stable
          override: true
      - name: Build and test the port
        working-directory: source/ports/rs_port
        run: |
          cargo build --verbose
          cargo test --verbose
  # release:
  #   name: Release Rust Port
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - name: Release the port
  #       run: |
  #         cd source/ports/rs_port
  #         bash ./upload.sh
