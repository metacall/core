name: Release Rust Crates

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [ master, develop ]
    paths:
      - 'source/ports/rs_port/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

jobs:
  test:
    name: Rust Port Tests
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-latest, macos-latest] # TODO: windows-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install MetaCall Unix
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: curl -sL https://raw.githubusercontent.com/metacall/install/master/install.sh | sh
      - name: Install MetaCall Windows
        if: matrix.os == 'windows-latest'
        run: powershell -NoProfile -ExecutionPolicy Unrestricted -Command "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; &([scriptblock]::Create((Invoke-WebRequest -UseBasicParsing 'https://raw.githubusercontent.com/metacall/install/master/install.ps1')))"
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build and Test the Rust Port
        working-directory: source/ports/rs_port
        run: |
          cargo build --verbose
          cargo test --verbose

  release:
    name: Release Rust Port
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name != 'workflow_dispatch' && github.event_name != 'pull_request' }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Release the port
        run: |
          cd source/ports/rs_port
          bash ./upload.sh
