name: Build and Push Docker Image for Multiple Architectures

on:
  pull_request:
  push:
    branches:
      - master
      - develop
    tags:
      - 'v*.*.*'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: index.docker.io/mryash/core
  BUILDKIT_VERSION: 0.13.0

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
         # - linux/arm64
         # - linux/riscv64
         # - linux/ppc64le
         # - linux/s390x
          - linux/386
         # - linux/arm/v7
         # - linux/arm/v6
          # - linux/mips64le
          # - linux/mips64

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Docker Setup BuildX
        uses: docker/setup-buildx-action@v3
        with:
          version: v${{ env.BUILDKIT_VERSION }}

      - name: Verify Docker BuildX Version
        run: docker buildx version

      - name: Authenticate to Docker registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build MetaCall Docker Images
        env:
          METACALL_PLATFORM: ${{ matrix.platform }}
        run: |
          ./docker-compose.sh platform

      # - name: Generate images
      #   if: github.event_name != 'pull_request'
      #   run: |
      #     for tag in "deps" "dev" "runtime" "cli"; do
      #       mkdir -p "/tmp/images/${tag}"
      #       digest="$(docker images --no-trunc --quiet metacall/core:${tag})"
      #       echo "FROM metacall/core:${tag}@${digest}" &> "/tmp/images/${tag}/Dockerfile"
      #     done

      # - name: Build and push by digest (deps)
      #   id: build
      #   uses: docker/build-push-action@v6
      #   if: github.event_name != 'pull_request'
      #   with:
      #     context: /tmp/images/deps/Dockerfile
      #     platforms: ${{ matrix.platform }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     outputs: type=image,name=docker.io/${{ env.IMAGE_NAME }}:deps,push-by-digest=true,name-canonical=true,push=true

      - name: Export digests
        if: github.event_name != 'pull_request'
        run: |
          PLATFORM=${{ matrix.platform }}
          echo "PLATFORM=${PLATFORM//\//-}" >> $GITHUB_ENV
          for tag in "deps" "dev" "runtime" "cli"; do
            mkdir -p "/tmp/digests/${tag}"
            digest="$(docker images --no-trunc --quiet metacall/core:${tag})"
            touch "/tmp/digests/${tag}/${digest#sha256:}"
          done

      - name: Upload digests
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge digests for the manifest
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v${{ env.BUILDKIT_VERSION }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Authenticate to Docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Create manifest list and push
        run: |
         set -exuo pipefail
         for tag in "deps" "dev" "runtime" "cli"; do
          cd "/tmp/digests/${tag}"
          IFS=$'\n' read -ra HASHES <<< "$(printf '%s\n' *)"
          for hash in "${HASHES[@]}"; do
            # Push the image directly by digest without re-tagging
            docker push "${{ env.IMAGE_NAME }}:${tag}@${hash}"
          done
          
          # Create manifest list with tagged references
          docker buildx imagetools create -t "${{ env.IMAGE_NAME }}:${tag}" "${HASHES[@]/#/${{ env.IMAGE_NAME }}:${tag}@}"
          
          if [[ "${tag}" == "cli" ]]; then
            docker buildx imagetools create -t "${{ env.IMAGE_NAME }}:latest" "${HASHES[@]/#/${{ env.IMAGE_NAME }}:${tag}@}"
            
            if [[ "${{ contains(github.ref, 'refs/tags/') }}" == true ]]; then
              TAG="${GITHUB_REF#refs/*/}"
              VERSION="${TAG#v}"
              docker buildx imagetools create -t "${{ env.IMAGE_NAME }}:${VERSION}" "${HASHES[@]/#/${{ env.IMAGE_NAME }}:${tag}@}"
            fi
          fi
         done
        
