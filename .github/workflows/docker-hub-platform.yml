name: Build and Push Docker Image for Multiple Architectures

on:
  pull_request:
  push:
    branches:
      - master
      - develop
    tags:
      - 'v*.*.*'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_USERNAME: metacall
  IMAGE_NAME: core
  BUILDKIT_VERSION: 0.13.0

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - linux/riscv64
          - linux/ppc64le
          - linux/s390x
          - linux/386
          - linux/arm/v7
          - linux/arm/v6

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3
        with:
          version: v${{ env.BUILDKIT_VERSION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build MetaCall Docker Images
        env:
          METACALL_PLATFORM: ${{ matrix.platform }}
        run: |
          export DOCKER_BUILDKIT=1
          export COMPOSE_DOCKER_CLI_BUILD=1
          export BUILDKIT_PROGRESS=plain
          export PROGRESS_NO_TRUNC=1
          ./docker-compose.sh platform

      - name: Push Platform Images
        run: |
          platform_tag=$(echo "${{ matrix.platform }}" | tr '/' '-')
          for tag in "deps" "dev" "runtime" "cli"; do
            docker tag ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag} \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-${platform_tag}
            docker push ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-${platform_tag}
          done

  manifest:
    name: Create and Push Manifest Lists
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Create and Push Manifest Lists
        run: |
          for tag in "deps" "dev" "runtime" "cli"; do
            docker manifest create ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag} \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-linux-amd64 \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-linux-arm64 \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-linux-riscv64 \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-linux-ppc64le \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-linux-s390x \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-linux-386 \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-linux-arm-v7 \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-linux-arm-v6

            docker manifest push ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}
          done

      - name: Create Version-Specific Tags
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          for tag in "deps" "dev" "runtime" "cli"; do
            docker manifest create ${DOCKER_USERNAME}/${IMAGE_NAME}:${VERSION}-${tag} \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-linux-amd64 \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-linux-arm64 \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-linux-riscv64 \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-linux-ppc64le \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-linux-s390x \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-linux-386 \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-linux-arm-v7 \
              ${DOCKER_USERNAME}/${IMAGE_NAME}:${tag}-linux-arm-v6

            docker manifest push ${DOCKER_USERNAME}/${IMAGE_NAME}:${VERSION}-${tag}
          done

          docker manifest create ${DOCKER_USERNAME}/${IMAGE_NAME}:latest \
            ${DOCKER_USERNAME}/${IMAGE_NAME}:cli-linux-amd64 \
            ${DOCKER_USERNAME}/${IMAGE_NAME}:cli-linux-arm64 \
            ${DOCKER_USERNAME}/${IMAGE_NAME}:cli-linux-riscv64 \
            ${DOCKER_USERNAME}/${IMAGE_NAME}:cli-linux-ppc64le \
            ${DOCKER_USERNAME}/${IMAGE_NAME}:cli-linux-s390x \
            ${DOCKER_USERNAME}/${IMAGE_NAME}:cli-linux-386 \
            ${DOCKER_USERNAME}/${IMAGE_NAME}:cli-linux-arm-v7 \
            ${DOCKER_USERNAME}/${IMAGE_NAME}:cli-linux-arm-v6

          docker manifest push ${DOCKER_USERNAME}/${IMAGE_NAME}:latest

  test:
    name: Test CLI Image
    needs: manifest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - linux/riscv64
          - linux/ppc64le
          - linux/s390x
          - linux/386
          - linux/arm/v7
          - linux/arm/v6

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Create Test Dockerfile
        run: |
          cat <<EOF > Dockerfile
          FROM ${DOCKER_USERNAME}/${IMAGE_NAME}:cli
          RUN echo "console.log('abcde')" > script.js
          RUN metacallcli script.js
          EOF

      - name: Build and Test Image
        run: |
          platform_tag=$(echo "${{ matrix.platform }}" | tr '/' '-')
          docker pull ${DOCKER_USERNAME}/${IMAGE_NAME}:cli
          docker build --platform ${{ matrix.platform }} -t test-image .
          docker run --rm --platform=${{ matrix.platform }} test-image

  cleanup:
    name: Cleanup Platform Specific Tags
    needs:
      - build
      - manifest
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Remove Platform-Specific Tags
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        run: |
          platforms=("linux-amd64" "linux-arm64" "linux-riscv64" "linux-ppc64le" "linux-s390x" "linux-386" "linux-arm-v7" "linux-arm-v6")
          tags=("deps" "dev" "runtime" "cli")

          for platform in "${platforms[@]}"; do
            for tag in "${tags[@]}"; do
              tag_to_delete="${tag}-${platform}"
              echo "Deleting tag: ${tag_to_delete}"

              curl -X DELETE \
                -H "Authorization: Bearer ${DOCKER_HUB_ACCESS_TOKEN}" \
                "https://hub.docker.com/v2/repositories/${DOCKER_USERNAME}/${IMAGE_NAME}/tags/${tag_to_delete}/"
            done
          done
