name: MacOS Test

on:
  workflow_dispatch:
  pull_request:
  push:
    tags:
      - "v*.*.*"
    branches:
      - master
      - develop

jobs:
  mac-test:
    name: MacOS Clang Test
    runs-on: macos-latest

    strategy:
      matrix:
        buildtype: [debug] # TODO: [debug, release]

    env:
      LTTNG_UST_REGISTER_TIMEOUT: 0
      NUGET_XMLDOC_MODE: skip
      DOTNET_CLI_TELEMETRY_OPTOUT: "true"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Uninstall NodeJS and NPM
        run: |
          npm uninstall npm -g
          rm -rf /usr/local/lib/node_modules/npm

        # TODO: This must go in metacall-environment-macos.sh as base dependencies
      - name: Configure Clang
        run: |
          brew install llvm cmake git wget gnupg ca-certificates

      - name: Set up the environment
        run: sh ./tools/metacall-environment-macos.sh $METACALL_INSTALL_OPTIONS
        env:
          METACALL_INSTALL_OPTIONS: python nodejs java # ruby netcore5 typescript file rpc wasm c cobol rust rapidjson funchook swig pack # clangformat v8rep51 coverage

      - name: Configure
        run: |
          mkdir -p build
          cd build
          bash ../tools/metacall-configure.sh $METACALL_CONFIGURE_OPTIONS
        env:
          METACALL_CONFIGURE_OPTIONS: ${{ matrix.buildtype }} scripts ports tests sanitizer python java # nodejs python java sanitizer ruby netcore5 typescript file rpc wasm java c cobol rust examples dynamic install pack benchmarks # v8 coverage

      - name: Build
        working-directory: ./build
        # TODO: Remove the disable option for fork safe once funchook problem is solved
        run: |
          cmake -DOPTION_FORK_SAFE=OFF \
             -DPython_INCLUDE_DIRS="$HOME/.pyenv/versions/3.11.1/include/python3.11" \
             -DPython_LIBRARY="$HOME/.pyenv/versions/3.11.1/lib/libpython3.11.dylib" \
             -DPython_EXECUTABLE="$HOME/.pyenv/versions/3.11.1/bin/python3.11" \
             -DPython_ROOT="$HOME/.pyenv/versions/3.11.1" \
             -DPython_VERSION="3.11.1" ..
          bash ../tools/metacall-build.sh $METACALL_BUILD_OPTIONS
        env:
          METACALL_BUILD_OPTIONS: ${{ matrix.buildtype }} tests
