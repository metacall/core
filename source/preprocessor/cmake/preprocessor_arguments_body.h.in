/* -- Definitions -- */

#cmakedefine PREPROCESSOR_ARGS_SIZE @PREPROCESSOR_ARGS_SIZE@

/* -- Macros -- */

#define PREPROCESSOR_ARGS_COUNT_SEQ_IMPL() \
	@PREPROCESSOR_ARGS_COUNT_SEQ_IMPL_BODY@0

#define PREPROCESSOR_ARGS_COMMA_SEQ_IMPL() \
	@PREPROCESSOR_ARGS_COMMA_SEQ_IMPL_BODY@0

#define PREPROCESSOR_ARGS_N_IMPL( \
	@PREPROCESSOR_ARGS_N_IMPL_BODY@\
	N, ...) N

#define PREPROCESSOR_ARGS_FIRST(first, ...) first

#define PREPROCESSOR_ARGS_FIRST_REMOVE(first, ...) __VA_ARGS__

#define PREPROCESSOR_ARGS_SECOND(first, second, ...) second

#define PREPROCESSOR_ARGS_SECOND_REMOVE(first, second, ...) first, __VA_ARGS__

#define PREPROCESSOR_ARGS_NOT_EMPTY_IMPL(...) \
	PREPROCESSOR_ARGS_EMPTY(__VA_ARGS__)

#define PREPROCESSOR_ARGS_NOT_EMPTY(...) \
	PREPROCESSOR_NOT(PREPROCESSOR_ARGS_EMPTY(__VA_ARGS__))

#define PREPROCESSOR_ARGS_EMPTY_CASE_IMPL_0001 ,

#define PREPROCESSOR_ARGS_EMPTY_CASE(_0, _1, _2, _3, _4) \
	_0 ## _1 ## _2 ## _3 ## _4

#define PREPROCESSOR_ARGS_EMPTY_IMPL_I(_0, _1, _2, _3) \
	PREPROCESSOR_ARGS_COMMA(PREPROCESSOR_ARGS_EMPTY_CASE(PREPROCESSOR_ARGS_EMPTY_CASE_IMPL_, _0, _1, _2, _3))

#define PREPROCESSOR_ARGS_EMPTY_IMPL(_0, _1, _2, _3) \
	PREPROCESSOR_ARGS_EMPTY_IMPL_I(_0, _1, _2, _3)

#define PREPROCESSOR_ARGS_EMPTY(...) \
	PREPROCESSOR_ARGS_EMPTY_IMPL( \
		PREPROCESSOR_ARGS_COMMA(__VA_ARGS__), \
		PREPROCESSOR_ARGS_COMMA(PREPROCESSOR_COMMA_VARIADIC __VA_ARGS__), \
		PREPROCESSOR_ARGS_COMMA(__VA_ARGS__ ()), \
		PREPROCESSOR_ARGS_COMMA(PREPROCESSOR_COMMA_VARIADIC __VA_ARGS__ ()) \
	)

#if defined(__GNUC__) || defined(__clang__)
#	define PREPROCESSOR_ARGS_COUNT_IMPL(...) \
		PREPROCESSOR_ARGS_N_IMPL(__VA_ARGS__)
#	define PREPROCESSOR_ARGS_COUNT(...) \
		PREPROCESSOR_IF(PREPROCESSOR_ARGS_EMPTY(__VA_ARGS__), \
			0, \
			PREPROCESSOR_ARGS_COUNT_IMPL(__VA_ARGS__, PREPROCESSOR_ARGS_COUNT_SEQ_IMPL()) \
		)
#	if (defined(__cplusplus) && (__cplusplus >= 201103L)) || \
		(defined(__STDC__) && defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901L))
#		define PREPROCESSOR_ARGS_COMMA_IMPL_0 1
#		define PREPROCESSOR_ARGS_COMMA_IMPL_1 1
@PREPROCESSOR_ARGS_COMMA_IMPL_BODY@
#		define PREPROCESSOR_ARGS_COMMA_IMPL(value) \
			PREPROCESSOR_NOT(PREPROCESSOR_CONCAT(PREPROCESSOR_ARGS_COMMA_IMPL_, value))
#		define PREPROCESSOR_ARGS_COMMA(...) \
			PREPROCESSOR_ARGS_COMMA_IMPL( \
				PREPROCESSOR_DECREMENT(PREPROCESSOR_ARGS_COUNT_IMPL(~, __VA_ARGS__, PREPROCESSOR_ARGS_COUNT_SEQ_IMPL())) \
			)
#	else
#		define PREPROCESSOR_ARGS_COMMA(...) \
			PREPROCESSOR_ARGS_COUNT_IMPL(__VA_ARGS__, PREPROCESSOR_ARGS_COMMA_SEQ_IMPL())
#	endif
#elif defined(_MSC_VER) && !defined(__clang__)
#	define PREPROCESSOR_ARGS_COUNT_PREFIX__PREPROCESSOR_ARGS_COUNT_POSTFIX @PREPROCESSOR_ARGS_COUNT_PREFIX_POSTFIX_BODY@0
#	define PREPROCESSOR_ARGS_COUNT_IMPL(expr) PREPROCESSOR_ARGS_N_IMPL expr
#	define PREPROCESSOR_ARGS_COUNT(...) \
		PREPROCESSOR_ARGS_COUNT_IMPL((PREPROCESSOR_ARGS_COUNT_PREFIX_ ## __VA_ARGS__ ## _PREPROCESSOR_ARGS_COUNT_POSTFIX, PREPROCESSOR_ARGS_COUNT_SEQ_IMPL()))
#	define PREPROCESSOR_ARGS_COMMA(...) \
		PREPROCESSOR_ARGS_COUNT_IMPL((PREPROCESSOR_ARGS_COUNT_PREFIX_ ## __VA_ARGS__ ## _PREPROCESSOR_ARGS_COUNT_POSTFIX, PREPROCESSOR_ARGS_COMMA_SEQ_IMPL()))
#else
#	error "Unkwnown preprocessor implementation for arguments."
#endif
